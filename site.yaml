
---
- name: Tasks started for webservers
  hosts: webservers
  become: true

  tasks:
  - name: apt-get update
    apt:
      update_cache: yes
      cache_valid_time: 3600
      
  - name: Install nginx
    apt:
      name: nginx
      state: latest
      
  - name: start nginx
    service:
      name: nginx
      state: started
      
  - name: Install php7.4
    apt:
      name: php7.4
      state: latest
      
  - name: Install php7.4-fpm
    apt:
      name: php7.4-fpm
      state: latest
      
  - name: Remove apache2 service from webservers
    apt:
      name: apache2
      state: absent
                    
  - name: create new default for nginx
    become: true
    copy:
      dest: "/etc/nginx/sites-available/default"
      content: | 
          server{
                 listen 80 default_server;
                 listen [::]:80 default_server;
                 root /var/www/html;
                 index index.php index.html index.htm index.nginx-debian.html;
                 server_name _;
                 location / {
                          try_files $uri $uri/ =404;
                 }
                 location ~ \.php$ {
                         include snippets/fastcgi-php.conf;
                         fastcgi_pass unix:/var/run/php/php7.4-fpm.sock;
                 }
          }
  - name: create index.php file in required path
    become: true
    copy:
      dest: "/var/www/html/index.php"
      content: |
        <?php echo date("Y-m-d H:i:s") . " Welcome to " . gethostname() . "|" .$_SERVER['SERVER_ADDR'] .":" . $_SERVER['SERVER_PORT'] ."<br>\n"; ?>

  - name: Restart nginx
    become: true
    service:
      name: nginx
      state: restarted

- hosts: webservers
  tasks:
    - debug: var=ansible_all_ipv4_addresses
      
- hosts: haproxy
  become: true
  tasks:
  - name: Install haproxy service
    apt:
     name: haproxy
     state: latest     
     update_cache: yes

  - name: Update haproxy config file
    blockinfile:
     path: /etc/haproxy/haproxy.cfg
     block: |
        frontend haproxy
            bind *:80
            mode http
            default_backend webservers
        backend webservers
            balance roundrobin
            option forwardfor
        {%  for server in groups['webservers'] %}
            server {{ hostvars[server]['inventory_hostname'] }} {{ hostvars[server]['ansible_default_ipv4']['address']}}:80 check
        {% endfor %}
                        
  - name: restart haproxy
    service:
      name: haproxy
      state: restarted

  - name: start haproxy
    service:
      name: haproxy
      state: started
